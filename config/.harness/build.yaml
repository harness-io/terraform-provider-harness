pipeline:
    name: ci
    identifier: build
    projectIdentifier: terraform_provider_harness
    orgIdentifier: Micahs_Projects
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: org.githubharnessio
                repoName: terraform-provider-harness
                build: <+input>
    stages:
        - stage:
              name: Build
              identifier: build
              type: CI
              spec:
                  cloneCodebase: true
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: Wait for Docker Host
                                identifier: Wait_for_Docker_Host
                                spec:
                                    connectorRef: account.harnessImage
                                    image: docker:dind
                                    command: |-
                                        ls -la /var/run
                                        ls -la /var/lib/docker

                                        while ! docker ps ;do
                                            echo "Docker not availble yet"
                                            sleep 1s
                                        done
                                            echo "Docker Service Ready"

                                        ls -la /var/run
                                        ls -la /var/lib/docker
                                    privileged: false
                          - step:
                                type: RestoreCacheGCS
                                spec:
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "1"
                                    key: terraform-provider-harness-{{ checksum "go.mod" }}
                                    connectorRef: org.gcp
                                    bucket: harness-micah-test
                                    archiveFormat: Gzip
                                name: Restore from cache
                                identifier: Restore_from_cache
                          - step:
                                type: Run
                                name: Install Dependencies
                                identifier: installdependencies
                                spec:
                                    connectorRef: org.gcp
                                    image: us.gcr.io/sales-209522/micah/go-build-tools:1.16-stretch-8
                                    command: go mod vendor
                                    privileged: false
                                    resources:
                                        limits:
                                            memory: 1Gi
                                            cpu: "1"
                          - step:
                                type: SaveCacheGCS
                                spec:
                                    connectorRef: org.gcp
                                    bucket: harness-micah-test
                                    key: terraform-provider-harness-{{ checksum "go.mod" }}
                                    sourcePaths:
                                        - ./vendor
                                    archiveFormat: Gzip
                                name: Save cache
                                identifier: Save_cache
                          - step:
                                type: Run
                                name: Build
                                identifier: build
                                spec:
                                    connectorRef: org.gcp
                                    image: us.gcr.io/sales-209522/micah/go-build-tools:1.16-stretch-8
                                    command: go build -v
                                    privileged: false
                                    resources:
                                        limits:
                                            memory: 4Gi
                                            cpu: "1"
                          - parallel:
                                - step:
                                      type: Run
                                      spec:
                                          connectorRef: org.gcp
                                          image: us.gcr.io/sales-209522/micah/go-build-tools:1.16-stretch-10
                                          command: golangci-lint run -v --timeout=10m
                                          privileged: false
                                          resources:
                                              limits:
                                                  memory: 2Gi
                                                  cpu: "1"
                                      name: Lint
                                      identifier: lint
                                      failureStrategies:
                                          - onFailure:
                                                errors:
                                                    - AllErrors
                                                action:
                                                    type: Ignore
                                - step:
                                      type: Run
                                      name: Test Terraform v1-0-0
                                      identifier: Test_Terraform_v100
                                      spec:
                                          connectorRef: org.gcp
                                          image: us.gcr.io/sales-209522/micah/go-build-tools:1.16-stretch-8
                                          command: gotestsum --junitfile junit.xml --format testname ./... -timeout 1h  -- -cover
                                          privileged: false
                                          reports:
                                              type: JUnit
                                              spec:
                                                  paths:
                                                      - junit.xml
                                          envVariables:
                                              TF_ACC: "1"
                                              TF_ACC_TERRAFORM_VERSION: 1.0.0
                                          resources:
                                              limits:
                                                  memory: 6Gi
                                                  cpu: "2"
                                      timeout: 30m
                                      failureStrategies:
                                          - onFailure:
                                                errors:
                                                    - AllErrors
                                                action:
                                                    type: Ignore
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: account.micahsprojects
                          namespace: micahs-projects
                  serviceDependencies:
                      - identifier: DockerHost
                        name: DockerHost
                        type: Service
                        spec:
                            connectorRef: account.harnessImage
                            image: docker:dind
                            privileged: true
                            resources:
                                limits:
                                    memory: 8Gi
                                    cpu: "2"
                  sharedPaths:
                      - /goroot
                      - /var/run
                      - /var/lib/docker
              variables:
                  - name: HARNESS_API_KEY
                    type: Secret
                    value: org.harness_api_key
                  - name: HARNESS_ACCOUNT_ID
                    type: Secret
                    value: org.harness_account_id
                  - name: HARNESS_ENDPOINT
                    type: String
                    value: https://app.harness.io/gateway/api
                  - name: GOPATH
                    type: String
                    value: /goroot
                  - name: TF_ACC
                    type: String
                    value: "1"
                  - name: HARNESS_NG_API_KEY
                    type: Secret
                    value: harness_ng_api_key
                  - name: HARNESS_TEST_AWS_ACCESS_KEY_ID
                    type: Secret
                    value: org.aws_access_key_id
                  - name: HARNESS_TEST_AWS_SECRET_ACCESS_KEY
                    type: Secret
                    value: org.aws_secret_access_key
                  - name: HARNESS_TEST_AZURE_CLIENT_ID
                    type: Secret
                    value: org.azure_client_id
                  - name: HARNESS_TEST_AZURE_CLIENT_SECRET
                    type: Secret
                    value: org.azure_client_secret
                  - name: HARNESS_TEST_AZURE_TENANT_ID
                    type: Secret
                    value: org.azure_tenant_id
                  - name: HARNESS_TEST_SPOT_ACCT_ID
                    type: Secret
                    value: org.spotinst_account_id
                  - name: HARNESS_TEST_SPOT_TOKEN
                    type: Secret
                    value: org.spotinst_token
                  - name: HARNESS_DELEGATE_SECRET
                    type: Secret
                    value: org.harness_delegate_secret
                  - name: HARNESS_TEST_DELEGATE_WAIT_TIMEOUT
                    type: String
                    value: 60m
